# Setup data transaction for below: 
# DApp_Admin_Rights
# Asset_ID
# Total_Txns


{-# STDLIB_VERSION 6 #-}
{-# CONTENT_TYPE DAPP #-}
{-# SCRIPT_TYPE ACCOUNT #-}

let adminrights = getStringValue(this, "DApp_Admin_Rights")
let NOJOAssetId = getStringValue(this, "Asset_ID")
let Receiver = "37f5kpiJc35wCxjYdagqWBiYvVLxAUUXGAg"

@Callable(i)
func ISSUE_NOJO() = {
  let calleraddress = toBase58String(i.caller.bytes)
  let asset = Issue("NOJO", "NOJO is a Rewards token facilitating direct P2P and B2P value transfer. It powers rewards programs, task bounties, tipping, and dApp integration. NOJO can be exchanged for other crypto, assets, goods, or services, enabling flexible incentivization and value exchange. Logo Image: https://drive.google.com/file/d/141sduh_ww9oKjZQmdsr19SSwlyF76Zg9/view?usp=drivesdk", 1, 8, true, unit, 0)
  let assetId = asset.calculateAssetId()
  
  if (adminrights != calleraddress) then throw("I know You are not An Admin. Only " + adminrights + " has rights to Sign.")    
  else
  [
    asset,
    Burn(assetId, 1)
  ]
}

@Callable(i)
func REISSUE_NOJO(Amount:Int) = {
  let calleraddress = toBase58String(i.caller.bytes)
  let asset = fromBase58String(NOJOAssetId)
  
  let PreviousTxnsNOJO = match getIntegerValue(this, "Total_Txns") {
    case a: Int => 
            a
    case _ => 
            0
    }
    
  let TotalTxnsNOJO = PreviousTxnsNOJO + 1

  if (adminrights != calleraddress) then throw("I know You are not An Admin. Only " + adminrights + " has rights to Sign.")    
  else
  [
    IntegerEntry("Total_Txns",TotalTxnsNOJO),
    Reissue(asset, Amount, true),
    ScriptTransfer(addressFromStringValue(Receiver),Amount,asset),
    ScriptTransfer(i.caller,5_00_000,unit)
  ]
}


@Verifier(tx)
func verify() = sigVerify(tx.bodyBytes, tx.proofs[0], tx.senderPublicKey)